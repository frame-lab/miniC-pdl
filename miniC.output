Terminals unused in grammar

   DQUOT_T
   SQUOT_T
   AMP_T
   ADDIOP


State 119 conflicts: 10 shift/reduce
State 120 conflicts: 10 shift/reduce
State 121 conflicts: 10 shift/reduce
State 122 conflicts: 10 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: DeclList FuncList
    2        | DeclList
    3        | FuncList

    4 DeclList: Declaration
    5         | DeclList Declaration

    6 FuncList: Function
    7         | FuncList Function

    8 Declaration: Type IdentList ';'

    9 IdentList: Identifier
   10          | IdentList ',' Identifier

   11 Identifier: ID
   12           | ID '[' INTNUM ']'

   13 ParamList: Parameter
   14          | ParamList ',' Parameter

   15 Parameter: Type Identifier

   16 Function: Type ID '(' ')' CompoundStmt
   17         | Type ID '(' ParamList ')' CompoundStmt

   18 Type: INT
   19     | FLOAT

   20 CompoundStmt: '{' '}'
   21             | '{' StmtList '}'
   22             | '{' DeclList StmtList '}'
   23             | '{' DeclList '}'

   24 StmtList: Stmt
   25         | StmtList Stmt

   26 Stmt: AssignStmt
   27     | CallStmt
   28     | RetStmt
   29     | While_s
   30     | For_s
   31     | If_s
   32     | CompoundStmt
   33     | ';'

   34 AssignStmt: Assign ';'

   35 Assign: ID '=' Expr
   36       | ID '[' Expr ']' '=' Expr

   37 CallStmt: Call ';'

   38 Call: ID '(' ')'
   39     | ID '(' ArgList ')'

   40 ArgList: Arg
   41        | ArgList ',' Arg

   42 Arg: Expr

   43 RetStmt: RETURN ';'
   44        | RETURN Expr ';'

   45 Expr: MINUS Expr
   46     | Expr Addiop Expr
   47     | Expr Multop Expr
   48     | Expr Relaop Expr
   49     | Expr Eqltop Expr
   50     | Call
   51     | INTNUM
   52     | FLOATNUM
   53     | Id_s
   54     | '(' Expr ')'

   55 Id_s: ID
   56     | ID '[' Expr ']'

   57 Addiop: MINUS
   58       | PLUS

   59 Multop: MULT
   60       | DIV

   61 Relaop: LE
   62       | GE
   63       | GT
   64       | LT

   65 Eqltop: EQ
   66       | NE

   67 While_s: WHILE '(' Expr ')' Stmt
   68        | DO Stmt WHILE '(' Expr ')' ';'

   69 For_s: FOR '(' Assign ';' Expr ';' Assign ')' Stmt

   70 If_s: IF '(' Expr ')' Stmt
   71     | IF '(' Expr ')' Stmt ELSE Stmt


Terminals, with rules where they appear

$end (0) 0
'(' (40) 16 17 38 39 54 67 68 69 70 71
')' (41) 16 17 38 39 54 67 68 69 70 71
',' (44) 10 14 41
';' (59) 8 33 34 37 43 44 68 69
'=' (61) 35 36
'[' (91) 12 36 56
']' (93) 12 36 56
'{' (123) 20 21 22 23
'}' (125) 20 21 22 23
error (256)
INTNUM (258) 12 51
FLOATNUM (259) 52
ID (260) 11 12 16 17 35 36 38 39 55 56
INT (261) 18
FLOAT (262) 19
MINUS (263) 45 57
PLUS (264) 58
MULT (265) 59
DIV (266) 60
LE (267) 61
GE (268) 62
EQ (269) 65
NE (270) 66
GT (271) 63
LT (272) 64
IF (273) 70 71
ELSE (274) 71
FOR (275) 69
WHILE (276) 67 68
DO (277) 68
RETURN (278) 43 44
DQUOT_T (279)
SQUOT_T (280)
AMP_T (281)
LOWER_THAN_ELSE (282)
ADDIOP (283)


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
Program (39)
    on left: 1 2 3, on right: 0
DeclList (40)
    on left: 4 5, on right: 1 2 5 22 23
FuncList (41)
    on left: 6 7, on right: 1 3 7
Declaration (42)
    on left: 8, on right: 4 5
IdentList (43)
    on left: 9 10, on right: 8 10
Identifier (44)
    on left: 11 12, on right: 9 10 15
ParamList (45)
    on left: 13 14, on right: 14 17
Parameter (46)
    on left: 15, on right: 13 14
Function (47)
    on left: 16 17, on right: 6 7
Type (48)
    on left: 18 19, on right: 8 15 16 17
CompoundStmt (49)
    on left: 20 21 22 23, on right: 16 17 32
StmtList (50)
    on left: 24 25, on right: 21 22 25
Stmt (51)
    on left: 26 27 28 29 30 31 32 33, on right: 24 25 67 68 69 70 71
AssignStmt (52)
    on left: 34, on right: 26
Assign (53)
    on left: 35 36, on right: 34 69
CallStmt (54)
    on left: 37, on right: 27
Call (55)
    on left: 38 39, on right: 37 50
ArgList (56)
    on left: 40 41, on right: 39 41
Arg (57)
    on left: 42, on right: 40 41
RetStmt (58)
    on left: 43 44, on right: 28
Expr (59)
    on left: 45 46 47 48 49 50 51 52 53 54, on right: 35 36 42 44 45
    46 47 48 49 54 56 67 68 69 70 71
Id_s (60)
    on left: 55 56, on right: 53
Addiop (61)
    on left: 57 58, on right: 46
Multop (62)
    on left: 59 60, on right: 47
Relaop (63)
    on left: 61 62 63 64, on right: 48
Eqltop (64)
    on left: 65 66, on right: 49
While_s (65)
    on left: 67 68, on right: 29
For_s (66)
    on left: 69, on right: 30
If_s (67)
    on left: 70 71, on right: 31


State 0

    0 $accept: . Program $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2

    Program      go to state 3
    DeclList     go to state 4
    FuncList     go to state 5
    Declaration  go to state 6
    Function     go to state 7
    Type         go to state 8


State 1

   18 Type: INT .

    $default  reduce using rule 18 (Type)


State 2

   19 Type: FLOAT .

    $default  reduce using rule 19 (Type)


State 3

    0 $accept: Program . $end

    $end  shift, and go to state 9


State 4

    1 Program: DeclList . FuncList
    2        | DeclList .
    5 DeclList: DeclList . Declaration

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2

    $default  reduce using rule 2 (Program)

    FuncList     go to state 10
    Declaration  go to state 11
    Function     go to state 7
    Type         go to state 8


State 5

    3 Program: FuncList .
    7 FuncList: FuncList . Function

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2

    $default  reduce using rule 3 (Program)

    Function  go to state 12
    Type      go to state 13


State 6

    4 DeclList: Declaration .

    $default  reduce using rule 4 (DeclList)


State 7

    6 FuncList: Function .

    $default  reduce using rule 6 (FuncList)


State 8

    8 Declaration: Type . IdentList ';'
   16 Function: Type . ID '(' ')' CompoundStmt
   17         | Type . ID '(' ParamList ')' CompoundStmt

    ID  shift, and go to state 14

    IdentList   go to state 15
    Identifier  go to state 16


State 9

    0 $accept: Program $end .

    $default  accept


State 10

    1 Program: DeclList FuncList .
    7 FuncList: FuncList . Function

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2

    $default  reduce using rule 1 (Program)

    Function  go to state 12
    Type      go to state 13


State 11

    5 DeclList: DeclList Declaration .

    $default  reduce using rule 5 (DeclList)


State 12

    7 FuncList: FuncList Function .

    $default  reduce using rule 7 (FuncList)


State 13

   16 Function: Type . ID '(' ')' CompoundStmt
   17         | Type . ID '(' ParamList ')' CompoundStmt

    ID  shift, and go to state 17


State 14

   11 Identifier: ID .
   12           | ID . '[' INTNUM ']'
   16 Function: Type ID . '(' ')' CompoundStmt
   17         | Type ID . '(' ParamList ')' CompoundStmt

    '['  shift, and go to state 18
    '('  shift, and go to state 19

    $default  reduce using rule 11 (Identifier)


State 15

    8 Declaration: Type IdentList . ';'
   10 IdentList: IdentList . ',' Identifier

    ';'  shift, and go to state 20
    ','  shift, and go to state 21


State 16

    9 IdentList: Identifier .

    $default  reduce using rule 9 (IdentList)


State 17

   16 Function: Type ID . '(' ')' CompoundStmt
   17         | Type ID . '(' ParamList ')' CompoundStmt

    '('  shift, and go to state 19


State 18

   12 Identifier: ID '[' . INTNUM ']'

    INTNUM  shift, and go to state 22


State 19

   16 Function: Type ID '(' . ')' CompoundStmt
   17         | Type ID '(' . ParamList ')' CompoundStmt

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    ')'    shift, and go to state 23

    ParamList  go to state 24
    Parameter  go to state 25
    Type       go to state 26


State 20

    8 Declaration: Type IdentList ';' .

    $default  reduce using rule 8 (Declaration)


State 21

   10 IdentList: IdentList ',' . Identifier

    ID  shift, and go to state 27

    Identifier  go to state 28


State 22

   12 Identifier: ID '[' INTNUM . ']'

    ']'  shift, and go to state 29


State 23

   16 Function: Type ID '(' ')' . CompoundStmt

    '{'  shift, and go to state 30

    CompoundStmt  go to state 31


State 24

   14 ParamList: ParamList . ',' Parameter
   17 Function: Type ID '(' ParamList . ')' CompoundStmt

    ','  shift, and go to state 32
    ')'  shift, and go to state 33


State 25

   13 ParamList: Parameter .

    $default  reduce using rule 13 (ParamList)


State 26

   15 Parameter: Type . Identifier

    ID  shift, and go to state 27

    Identifier  go to state 34


State 27

   11 Identifier: ID .
   12           | ID . '[' INTNUM ']'

    '['  shift, and go to state 18

    $default  reduce using rule 11 (Identifier)


State 28

   10 IdentList: IdentList ',' Identifier .

    $default  reduce using rule 10 (IdentList)


State 29

   12 Identifier: ID '[' INTNUM ']' .

    $default  reduce using rule 12 (Identifier)


State 30

   20 CompoundStmt: '{' . '}'
   21             | '{' . StmtList '}'
   22             | '{' . DeclList StmtList '}'
   23             | '{' . DeclList '}'

    ID      shift, and go to state 35
    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    IF      shift, and go to state 36
    FOR     shift, and go to state 37
    WHILE   shift, and go to state 38
    DO      shift, and go to state 39
    RETURN  shift, and go to state 40
    ';'     shift, and go to state 41
    '{'     shift, and go to state 30
    '}'     shift, and go to state 42

    DeclList      go to state 43
    Declaration   go to state 6
    Type          go to state 44
    CompoundStmt  go to state 45
    StmtList      go to state 46
    Stmt          go to state 47
    AssignStmt    go to state 48
    Assign        go to state 49
    CallStmt      go to state 50
    Call          go to state 51
    RetStmt       go to state 52
    While_s       go to state 53
    For_s         go to state 54
    If_s          go to state 55


State 31

   16 Function: Type ID '(' ')' CompoundStmt .

    $default  reduce using rule 16 (Function)


State 32

   14 ParamList: ParamList ',' . Parameter

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2

    Parameter  go to state 56
    Type       go to state 26


State 33

   17 Function: Type ID '(' ParamList ')' . CompoundStmt

    '{'  shift, and go to state 30

    CompoundStmt  go to state 57


State 34

   15 Parameter: Type Identifier .

    $default  reduce using rule 15 (Parameter)


State 35

   35 Assign: ID . '=' Expr
   36       | ID . '[' Expr ']' '=' Expr
   38 Call: ID . '(' ')'
   39     | ID . '(' ArgList ')'

    '['  shift, and go to state 58
    '('  shift, and go to state 59
    '='  shift, and go to state 60


State 36

   70 If_s: IF . '(' Expr ')' Stmt
   71     | IF . '(' Expr ')' Stmt ELSE Stmt

    '('  shift, and go to state 61


State 37

   69 For_s: FOR . '(' Assign ';' Expr ';' Assign ')' Stmt

    '('  shift, and go to state 62


State 38

   67 While_s: WHILE . '(' Expr ')' Stmt

    '('  shift, and go to state 63


State 39

   68 While_s: DO . Stmt WHILE '(' Expr ')' ';'

    ID      shift, and go to state 35
    IF      shift, and go to state 36
    FOR     shift, and go to state 37
    WHILE   shift, and go to state 38
    DO      shift, and go to state 39
    RETURN  shift, and go to state 40
    ';'     shift, and go to state 41
    '{'     shift, and go to state 30

    CompoundStmt  go to state 45
    Stmt          go to state 64
    AssignStmt    go to state 48
    Assign        go to state 49
    CallStmt      go to state 50
    Call          go to state 51
    RetStmt       go to state 52
    While_s       go to state 53
    For_s         go to state 54
    If_s          go to state 55


State 40

   43 RetStmt: RETURN . ';'
   44        | RETURN . Expr ';'

    INTNUM    shift, and go to state 65
    FLOATNUM  shift, and go to state 66
    ID        shift, and go to state 67
    MINUS     shift, and go to state 68
    ';'       shift, and go to state 69
    '('       shift, and go to state 70

    Call  go to state 71
    Expr  go to state 72
    Id_s  go to state 73


State 41

   33 Stmt: ';' .

    $default  reduce using rule 33 (Stmt)


State 42

   20 CompoundStmt: '{' '}' .

    $default  reduce using rule 20 (CompoundStmt)


State 43

    5 DeclList: DeclList . Declaration
   22 CompoundStmt: '{' DeclList . StmtList '}'
   23             | '{' DeclList . '}'

    ID      shift, and go to state 35
    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    IF      shift, and go to state 36
    FOR     shift, and go to state 37
    WHILE   shift, and go to state 38
    DO      shift, and go to state 39
    RETURN  shift, and go to state 40
    ';'     shift, and go to state 41
    '{'     shift, and go to state 30
    '}'     shift, and go to state 74

    Declaration   go to state 11
    Type          go to state 44
    CompoundStmt  go to state 45
    StmtList      go to state 75
    Stmt          go to state 47
    AssignStmt    go to state 48
    Assign        go to state 49
    CallStmt      go to state 50
    Call          go to state 51
    RetStmt       go to state 52
    While_s       go to state 53
    For_s         go to state 54
    If_s          go to state 55


State 44

    8 Declaration: Type . IdentList ';'

    ID  shift, and go to state 27

    IdentList   go to state 15
    Identifier  go to state 16


State 45

   32 Stmt: CompoundStmt .

    $default  reduce using rule 32 (Stmt)


State 46

   21 CompoundStmt: '{' StmtList . '}'
   25 StmtList: StmtList . Stmt

    ID      shift, and go to state 35
    IF      shift, and go to state 36
    FOR     shift, and go to state 37
    WHILE   shift, and go to state 38
    DO      shift, and go to state 39
    RETURN  shift, and go to state 40
    ';'     shift, and go to state 41
    '{'     shift, and go to state 30
    '}'     shift, and go to state 76

    CompoundStmt  go to state 45
    Stmt          go to state 77
    AssignStmt    go to state 48
    Assign        go to state 49
    CallStmt      go to state 50
    Call          go to state 51
    RetStmt       go to state 52
    While_s       go to state 53
    For_s         go to state 54
    If_s          go to state 55


State 47

   24 StmtList: Stmt .

    $default  reduce using rule 24 (StmtList)


State 48

   26 Stmt: AssignStmt .

    $default  reduce using rule 26 (Stmt)


State 49

   34 AssignStmt: Assign . ';'

    ';'  shift, and go to state 78


State 50

   27 Stmt: CallStmt .

    $default  reduce using rule 27 (Stmt)


State 51

   37 CallStmt: Call . ';'

    ';'  shift, and go to state 79


State 52

   28 Stmt: RetStmt .

    $default  reduce using rule 28 (Stmt)


State 53

   29 Stmt: While_s .

    $default  reduce using rule 29 (Stmt)


State 54

   30 Stmt: For_s .

    $default  reduce using rule 30 (Stmt)


State 55

   31 Stmt: If_s .

    $default  reduce using rule 31 (Stmt)


State 56

   14 ParamList: ParamList ',' Parameter .

    $default  reduce using rule 14 (ParamList)


State 57

   17 Function: Type ID '(' ParamList ')' CompoundStmt .

    $default  reduce using rule 17 (Function)


State 58

   36 Assign: ID '[' . Expr ']' '=' Expr

    INTNUM    shift, and go to state 65
    FLOATNUM  shift, and go to state 66
    ID        shift, and go to state 67
    MINUS     shift, and go to state 68
    '('       shift, and go to state 70

    Call  go to state 71
    Expr  go to state 80
    Id_s  go to state 73


State 59

   38 Call: ID '(' . ')'
   39     | ID '(' . ArgList ')'

    INTNUM    shift, and go to state 65
    FLOATNUM  shift, and go to state 66
    ID        shift, and go to state 67
    MINUS     shift, and go to state 68
    '('       shift, and go to state 70
    ')'       shift, and go to state 81

    Call     go to state 71
    ArgList  go to state 82
    Arg      go to state 83
    Expr     go to state 84
    Id_s     go to state 73


State 60

   35 Assign: ID '=' . Expr

    INTNUM    shift, and go to state 65
    FLOATNUM  shift, and go to state 66
    ID        shift, and go to state 67
    MINUS     shift, and go to state 68
    '('       shift, and go to state 70

    Call  go to state 71
    Expr  go to state 85
    Id_s  go to state 73


State 61

   70 If_s: IF '(' . Expr ')' Stmt
   71     | IF '(' . Expr ')' Stmt ELSE Stmt

    INTNUM    shift, and go to state 65
    FLOATNUM  shift, and go to state 66
    ID        shift, and go to state 67
    MINUS     shift, and go to state 68
    '('       shift, and go to state 70

    Call  go to state 71
    Expr  go to state 86
    Id_s  go to state 73


State 62

   69 For_s: FOR '(' . Assign ';' Expr ';' Assign ')' Stmt

    ID  shift, and go to state 87

    Assign  go to state 88


State 63

   67 While_s: WHILE '(' . Expr ')' Stmt

    INTNUM    shift, and go to state 65
    FLOATNUM  shift, and go to state 66
    ID        shift, and go to state 67
    MINUS     shift, and go to state 68
    '('       shift, and go to state 70

    Call  go to state 71
    Expr  go to state 89
    Id_s  go to state 73


State 64

   68 While_s: DO Stmt . WHILE '(' Expr ')' ';'

    WHILE  shift, and go to state 90


State 65

   51 Expr: INTNUM .

    $default  reduce using rule 51 (Expr)


State 66

   52 Expr: FLOATNUM .

    $default  reduce using rule 52 (Expr)


State 67

   38 Call: ID . '(' ')'
   39     | ID . '(' ArgList ')'
   55 Id_s: ID .
   56     | ID . '[' Expr ']'

    '['  shift, and go to state 91
    '('  shift, and go to state 59

    $default  reduce using rule 55 (Id_s)


State 68

   45 Expr: MINUS . Expr

    INTNUM    shift, and go to state 65
    FLOATNUM  shift, and go to state 66
    ID        shift, and go to state 67
    MINUS     shift, and go to state 68
    '('       shift, and go to state 70

    Call  go to state 71
    Expr  go to state 92
    Id_s  go to state 73


State 69

   43 RetStmt: RETURN ';' .

    $default  reduce using rule 43 (RetStmt)


State 70

   54 Expr: '(' . Expr ')'

    INTNUM    shift, and go to state 65
    FLOATNUM  shift, and go to state 66
    ID        shift, and go to state 67
    MINUS     shift, and go to state 68
    '('       shift, and go to state 70

    Call  go to state 71
    Expr  go to state 93
    Id_s  go to state 73


State 71

   50 Expr: Call .

    $default  reduce using rule 50 (Expr)


State 72

   44 RetStmt: RETURN Expr . ';'
   46 Expr: Expr . Addiop Expr
   47     | Expr . Multop Expr
   48     | Expr . Relaop Expr
   49     | Expr . Eqltop Expr

    MINUS  shift, and go to state 94
    PLUS   shift, and go to state 95
    MULT   shift, and go to state 96
    DIV    shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    GT     shift, and go to state 102
    LT     shift, and go to state 103
    ';'    shift, and go to state 104

    Addiop  go to state 105
    Multop  go to state 106
    Relaop  go to state 107
    Eqltop  go to state 108


State 73

   53 Expr: Id_s .

    $default  reduce using rule 53 (Expr)


State 74

   23 CompoundStmt: '{' DeclList '}' .

    $default  reduce using rule 23 (CompoundStmt)


State 75

   22 CompoundStmt: '{' DeclList StmtList . '}'
   25 StmtList: StmtList . Stmt

    ID      shift, and go to state 35
    IF      shift, and go to state 36
    FOR     shift, and go to state 37
    WHILE   shift, and go to state 38
    DO      shift, and go to state 39
    RETURN  shift, and go to state 40
    ';'     shift, and go to state 41
    '{'     shift, and go to state 30
    '}'     shift, and go to state 109

    CompoundStmt  go to state 45
    Stmt          go to state 77
    AssignStmt    go to state 48
    Assign        go to state 49
    CallStmt      go to state 50
    Call          go to state 51
    RetStmt       go to state 52
    While_s       go to state 53
    For_s         go to state 54
    If_s          go to state 55


State 76

   21 CompoundStmt: '{' StmtList '}' .

    $default  reduce using rule 21 (CompoundStmt)


State 77

   25 StmtList: StmtList Stmt .

    $default  reduce using rule 25 (StmtList)


State 78

   34 AssignStmt: Assign ';' .

    $default  reduce using rule 34 (AssignStmt)


State 79

   37 CallStmt: Call ';' .

    $default  reduce using rule 37 (CallStmt)


State 80

   36 Assign: ID '[' Expr . ']' '=' Expr
   46 Expr: Expr . Addiop Expr
   47     | Expr . Multop Expr
   48     | Expr . Relaop Expr
   49     | Expr . Eqltop Expr

    MINUS  shift, and go to state 94
    PLUS   shift, and go to state 95
    MULT   shift, and go to state 96
    DIV    shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    GT     shift, and go to state 102
    LT     shift, and go to state 103
    ']'    shift, and go to state 110

    Addiop  go to state 105
    Multop  go to state 106
    Relaop  go to state 107
    Eqltop  go to state 108


State 81

   38 Call: ID '(' ')' .

    $default  reduce using rule 38 (Call)


State 82

   39 Call: ID '(' ArgList . ')'
   41 ArgList: ArgList . ',' Arg

    ','  shift, and go to state 111
    ')'  shift, and go to state 112


State 83

   40 ArgList: Arg .

    $default  reduce using rule 40 (ArgList)


State 84

   42 Arg: Expr .
   46 Expr: Expr . Addiop Expr
   47     | Expr . Multop Expr
   48     | Expr . Relaop Expr
   49     | Expr . Eqltop Expr

    MINUS  shift, and go to state 94
    PLUS   shift, and go to state 95
    MULT   shift, and go to state 96
    DIV    shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    GT     shift, and go to state 102
    LT     shift, and go to state 103

    $default  reduce using rule 42 (Arg)

    Addiop  go to state 105
    Multop  go to state 106
    Relaop  go to state 107
    Eqltop  go to state 108


State 85

   35 Assign: ID '=' Expr .
   46 Expr: Expr . Addiop Expr
   47     | Expr . Multop Expr
   48     | Expr . Relaop Expr
   49     | Expr . Eqltop Expr

    MINUS  shift, and go to state 94
    PLUS   shift, and go to state 95
    MULT   shift, and go to state 96
    DIV    shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    GT     shift, and go to state 102
    LT     shift, and go to state 103

    $default  reduce using rule 35 (Assign)

    Addiop  go to state 105
    Multop  go to state 106
    Relaop  go to state 107
    Eqltop  go to state 108


State 86

   46 Expr: Expr . Addiop Expr
   47     | Expr . Multop Expr
   48     | Expr . Relaop Expr
   49     | Expr . Eqltop Expr
   70 If_s: IF '(' Expr . ')' Stmt
   71     | IF '(' Expr . ')' Stmt ELSE Stmt

    MINUS  shift, and go to state 94
    PLUS   shift, and go to state 95
    MULT   shift, and go to state 96
    DIV    shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    GT     shift, and go to state 102
    LT     shift, and go to state 103
    ')'    shift, and go to state 113

    Addiop  go to state 105
    Multop  go to state 106
    Relaop  go to state 107
    Eqltop  go to state 108


State 87

   35 Assign: ID . '=' Expr
   36       | ID . '[' Expr ']' '=' Expr

    '['  shift, and go to state 58
    '='  shift, and go to state 60


State 88

   69 For_s: FOR '(' Assign . ';' Expr ';' Assign ')' Stmt

    ';'  shift, and go to state 114


State 89

   46 Expr: Expr . Addiop Expr
   47     | Expr . Multop Expr
   48     | Expr . Relaop Expr
   49     | Expr . Eqltop Expr
   67 While_s: WHILE '(' Expr . ')' Stmt

    MINUS  shift, and go to state 94
    PLUS   shift, and go to state 95
    MULT   shift, and go to state 96
    DIV    shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    GT     shift, and go to state 102
    LT     shift, and go to state 103
    ')'    shift, and go to state 115

    Addiop  go to state 105
    Multop  go to state 106
    Relaop  go to state 107
    Eqltop  go to state 108


State 90

   68 While_s: DO Stmt WHILE . '(' Expr ')' ';'

    '('  shift, and go to state 116


State 91

   56 Id_s: ID '[' . Expr ']'

    INTNUM    shift, and go to state 65
    FLOATNUM  shift, and go to state 66
    ID        shift, and go to state 67
    MINUS     shift, and go to state 68
    '('       shift, and go to state 70

    Call  go to state 71
    Expr  go to state 117
    Id_s  go to state 73


State 92

   45 Expr: MINUS Expr .
   46     | Expr . Addiop Expr
   47     | Expr . Multop Expr
   48     | Expr . Relaop Expr
   49     | Expr . Eqltop Expr

    $default  reduce using rule 45 (Expr)

    Addiop  go to state 105
    Multop  go to state 106
    Relaop  go to state 107
    Eqltop  go to state 108


State 93

   46 Expr: Expr . Addiop Expr
   47     | Expr . Multop Expr
   48     | Expr . Relaop Expr
   49     | Expr . Eqltop Expr
   54     | '(' Expr . ')'

    MINUS  shift, and go to state 94
    PLUS   shift, and go to state 95
    MULT   shift, and go to state 96
    DIV    shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    GT     shift, and go to state 102
    LT     shift, and go to state 103
    ')'    shift, and go to state 118

    Addiop  go to state 105
    Multop  go to state 106
    Relaop  go to state 107
    Eqltop  go to state 108


State 94

   57 Addiop: MINUS .

    $default  reduce using rule 57 (Addiop)


State 95

   58 Addiop: PLUS .

    $default  reduce using rule 58 (Addiop)


State 96

   59 Multop: MULT .

    $default  reduce using rule 59 (Multop)


State 97

   60 Multop: DIV .

    $default  reduce using rule 60 (Multop)


State 98

   61 Relaop: LE .

    $default  reduce using rule 61 (Relaop)


State 99

   62 Relaop: GE .

    $default  reduce using rule 62 (Relaop)


State 100

   65 Eqltop: EQ .

    $default  reduce using rule 65 (Eqltop)


State 101

   66 Eqltop: NE .

    $default  reduce using rule 66 (Eqltop)


State 102

   63 Relaop: GT .

    $default  reduce using rule 63 (Relaop)


State 103

   64 Relaop: LT .

    $default  reduce using rule 64 (Relaop)


State 104

   44 RetStmt: RETURN Expr ';' .

    $default  reduce using rule 44 (RetStmt)


State 105

   46 Expr: Expr Addiop . Expr

    INTNUM    shift, and go to state 65
    FLOATNUM  shift, and go to state 66
    ID        shift, and go to state 67
    MINUS     shift, and go to state 68
    '('       shift, and go to state 70

    Call  go to state 71
    Expr  go to state 119
    Id_s  go to state 73


State 106

   47 Expr: Expr Multop . Expr

    INTNUM    shift, and go to state 65
    FLOATNUM  shift, and go to state 66
    ID        shift, and go to state 67
    MINUS     shift, and go to state 68
    '('       shift, and go to state 70

    Call  go to state 71
    Expr  go to state 120
    Id_s  go to state 73


State 107

   48 Expr: Expr Relaop . Expr

    INTNUM    shift, and go to state 65
    FLOATNUM  shift, and go to state 66
    ID        shift, and go to state 67
    MINUS     shift, and go to state 68
    '('       shift, and go to state 70

    Call  go to state 71
    Expr  go to state 121
    Id_s  go to state 73


State 108

   49 Expr: Expr Eqltop . Expr

    INTNUM    shift, and go to state 65
    FLOATNUM  shift, and go to state 66
    ID        shift, and go to state 67
    MINUS     shift, and go to state 68
    '('       shift, and go to state 70

    Call  go to state 71
    Expr  go to state 122
    Id_s  go to state 73


State 109

   22 CompoundStmt: '{' DeclList StmtList '}' .

    $default  reduce using rule 22 (CompoundStmt)


State 110

   36 Assign: ID '[' Expr ']' . '=' Expr

    '='  shift, and go to state 123


State 111

   41 ArgList: ArgList ',' . Arg

    INTNUM    shift, and go to state 65
    FLOATNUM  shift, and go to state 66
    ID        shift, and go to state 67
    MINUS     shift, and go to state 68
    '('       shift, and go to state 70

    Call  go to state 71
    Arg   go to state 124
    Expr  go to state 84
    Id_s  go to state 73


State 112

   39 Call: ID '(' ArgList ')' .

    $default  reduce using rule 39 (Call)


State 113

   70 If_s: IF '(' Expr ')' . Stmt
   71     | IF '(' Expr ')' . Stmt ELSE Stmt

    ID      shift, and go to state 35
    IF      shift, and go to state 36
    FOR     shift, and go to state 37
    WHILE   shift, and go to state 38
    DO      shift, and go to state 39
    RETURN  shift, and go to state 40
    ';'     shift, and go to state 41
    '{'     shift, and go to state 30

    CompoundStmt  go to state 45
    Stmt          go to state 125
    AssignStmt    go to state 48
    Assign        go to state 49
    CallStmt      go to state 50
    Call          go to state 51
    RetStmt       go to state 52
    While_s       go to state 53
    For_s         go to state 54
    If_s          go to state 55


State 114

   69 For_s: FOR '(' Assign ';' . Expr ';' Assign ')' Stmt

    INTNUM    shift, and go to state 65
    FLOATNUM  shift, and go to state 66
    ID        shift, and go to state 67
    MINUS     shift, and go to state 68
    '('       shift, and go to state 70

    Call  go to state 71
    Expr  go to state 126
    Id_s  go to state 73


State 115

   67 While_s: WHILE '(' Expr ')' . Stmt

    ID      shift, and go to state 35
    IF      shift, and go to state 36
    FOR     shift, and go to state 37
    WHILE   shift, and go to state 38
    DO      shift, and go to state 39
    RETURN  shift, and go to state 40
    ';'     shift, and go to state 41
    '{'     shift, and go to state 30

    CompoundStmt  go to state 45
    Stmt          go to state 127
    AssignStmt    go to state 48
    Assign        go to state 49
    CallStmt      go to state 50
    Call          go to state 51
    RetStmt       go to state 52
    While_s       go to state 53
    For_s         go to state 54
    If_s          go to state 55


State 116

   68 While_s: DO Stmt WHILE '(' . Expr ')' ';'

    INTNUM    shift, and go to state 65
    FLOATNUM  shift, and go to state 66
    ID        shift, and go to state 67
    MINUS     shift, and go to state 68
    '('       shift, and go to state 70

    Call  go to state 71
    Expr  go to state 128
    Id_s  go to state 73


State 117

   46 Expr: Expr . Addiop Expr
   47     | Expr . Multop Expr
   48     | Expr . Relaop Expr
   49     | Expr . Eqltop Expr
   56 Id_s: ID '[' Expr . ']'

    MINUS  shift, and go to state 94
    PLUS   shift, and go to state 95
    MULT   shift, and go to state 96
    DIV    shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    GT     shift, and go to state 102
    LT     shift, and go to state 103
    ']'    shift, and go to state 129

    Addiop  go to state 105
    Multop  go to state 106
    Relaop  go to state 107
    Eqltop  go to state 108


State 118

   54 Expr: '(' Expr ')' .

    $default  reduce using rule 54 (Expr)


State 119

   46 Expr: Expr . Addiop Expr
   46     | Expr Addiop Expr .
   47     | Expr . Multop Expr
   48     | Expr . Relaop Expr
   49     | Expr . Eqltop Expr

    MINUS  shift, and go to state 94
    PLUS   shift, and go to state 95
    MULT   shift, and go to state 96
    DIV    shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    GT     shift, and go to state 102
    LT     shift, and go to state 103

    MINUS     [reduce using rule 46 (Expr)]
    PLUS      [reduce using rule 46 (Expr)]
    MULT      [reduce using rule 46 (Expr)]
    DIV       [reduce using rule 46 (Expr)]
    LE        [reduce using rule 46 (Expr)]
    GE        [reduce using rule 46 (Expr)]
    EQ        [reduce using rule 46 (Expr)]
    NE        [reduce using rule 46 (Expr)]
    GT        [reduce using rule 46 (Expr)]
    LT        [reduce using rule 46 (Expr)]
    $default  reduce using rule 46 (Expr)

    Addiop  go to state 105
    Multop  go to state 106
    Relaop  go to state 107
    Eqltop  go to state 108


State 120

   46 Expr: Expr . Addiop Expr
   47     | Expr . Multop Expr
   47     | Expr Multop Expr .
   48     | Expr . Relaop Expr
   49     | Expr . Eqltop Expr

    MINUS  shift, and go to state 94
    PLUS   shift, and go to state 95
    MULT   shift, and go to state 96
    DIV    shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    GT     shift, and go to state 102
    LT     shift, and go to state 103

    MINUS     [reduce using rule 47 (Expr)]
    PLUS      [reduce using rule 47 (Expr)]
    MULT      [reduce using rule 47 (Expr)]
    DIV       [reduce using rule 47 (Expr)]
    LE        [reduce using rule 47 (Expr)]
    GE        [reduce using rule 47 (Expr)]
    EQ        [reduce using rule 47 (Expr)]
    NE        [reduce using rule 47 (Expr)]
    GT        [reduce using rule 47 (Expr)]
    LT        [reduce using rule 47 (Expr)]
    $default  reduce using rule 47 (Expr)

    Addiop  go to state 105
    Multop  go to state 106
    Relaop  go to state 107
    Eqltop  go to state 108


State 121

   46 Expr: Expr . Addiop Expr
   47     | Expr . Multop Expr
   48     | Expr . Relaop Expr
   48     | Expr Relaop Expr .
   49     | Expr . Eqltop Expr

    MINUS  shift, and go to state 94
    PLUS   shift, and go to state 95
    MULT   shift, and go to state 96
    DIV    shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    GT     shift, and go to state 102
    LT     shift, and go to state 103

    MINUS     [reduce using rule 48 (Expr)]
    PLUS      [reduce using rule 48 (Expr)]
    MULT      [reduce using rule 48 (Expr)]
    DIV       [reduce using rule 48 (Expr)]
    LE        [reduce using rule 48 (Expr)]
    GE        [reduce using rule 48 (Expr)]
    EQ        [reduce using rule 48 (Expr)]
    NE        [reduce using rule 48 (Expr)]
    GT        [reduce using rule 48 (Expr)]
    LT        [reduce using rule 48 (Expr)]
    $default  reduce using rule 48 (Expr)

    Addiop  go to state 105
    Multop  go to state 106
    Relaop  go to state 107
    Eqltop  go to state 108


State 122

   46 Expr: Expr . Addiop Expr
   47     | Expr . Multop Expr
   48     | Expr . Relaop Expr
   49     | Expr . Eqltop Expr
   49     | Expr Eqltop Expr .

    MINUS  shift, and go to state 94
    PLUS   shift, and go to state 95
    MULT   shift, and go to state 96
    DIV    shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    GT     shift, and go to state 102
    LT     shift, and go to state 103

    MINUS     [reduce using rule 49 (Expr)]
    PLUS      [reduce using rule 49 (Expr)]
    MULT      [reduce using rule 49 (Expr)]
    DIV       [reduce using rule 49 (Expr)]
    LE        [reduce using rule 49 (Expr)]
    GE        [reduce using rule 49 (Expr)]
    EQ        [reduce using rule 49 (Expr)]
    NE        [reduce using rule 49 (Expr)]
    GT        [reduce using rule 49 (Expr)]
    LT        [reduce using rule 49 (Expr)]
    $default  reduce using rule 49 (Expr)

    Addiop  go to state 105
    Multop  go to state 106
    Relaop  go to state 107
    Eqltop  go to state 108


State 123

   36 Assign: ID '[' Expr ']' '=' . Expr

    INTNUM    shift, and go to state 65
    FLOATNUM  shift, and go to state 66
    ID        shift, and go to state 67
    MINUS     shift, and go to state 68
    '('       shift, and go to state 70

    Call  go to state 71
    Expr  go to state 130
    Id_s  go to state 73


State 124

   41 ArgList: ArgList ',' Arg .

    $default  reduce using rule 41 (ArgList)


State 125

   70 If_s: IF '(' Expr ')' Stmt .
   71     | IF '(' Expr ')' Stmt . ELSE Stmt

    ELSE  shift, and go to state 131

    $default  reduce using rule 70 (If_s)


State 126

   46 Expr: Expr . Addiop Expr
   47     | Expr . Multop Expr
   48     | Expr . Relaop Expr
   49     | Expr . Eqltop Expr
   69 For_s: FOR '(' Assign ';' Expr . ';' Assign ')' Stmt

    MINUS  shift, and go to state 94
    PLUS   shift, and go to state 95
    MULT   shift, and go to state 96
    DIV    shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    GT     shift, and go to state 102
    LT     shift, and go to state 103
    ';'    shift, and go to state 132

    Addiop  go to state 105
    Multop  go to state 106
    Relaop  go to state 107
    Eqltop  go to state 108


State 127

   67 While_s: WHILE '(' Expr ')' Stmt .

    $default  reduce using rule 67 (While_s)


State 128

   46 Expr: Expr . Addiop Expr
   47     | Expr . Multop Expr
   48     | Expr . Relaop Expr
   49     | Expr . Eqltop Expr
   68 While_s: DO Stmt WHILE '(' Expr . ')' ';'

    MINUS  shift, and go to state 94
    PLUS   shift, and go to state 95
    MULT   shift, and go to state 96
    DIV    shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    GT     shift, and go to state 102
    LT     shift, and go to state 103
    ')'    shift, and go to state 133

    Addiop  go to state 105
    Multop  go to state 106
    Relaop  go to state 107
    Eqltop  go to state 108


State 129

   56 Id_s: ID '[' Expr ']' .

    $default  reduce using rule 56 (Id_s)


State 130

   36 Assign: ID '[' Expr ']' '=' Expr .
   46 Expr: Expr . Addiop Expr
   47     | Expr . Multop Expr
   48     | Expr . Relaop Expr
   49     | Expr . Eqltop Expr

    MINUS  shift, and go to state 94
    PLUS   shift, and go to state 95
    MULT   shift, and go to state 96
    DIV    shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    GT     shift, and go to state 102
    LT     shift, and go to state 103

    $default  reduce using rule 36 (Assign)

    Addiop  go to state 105
    Multop  go to state 106
    Relaop  go to state 107
    Eqltop  go to state 108


State 131

   71 If_s: IF '(' Expr ')' Stmt ELSE . Stmt

    ID      shift, and go to state 35
    IF      shift, and go to state 36
    FOR     shift, and go to state 37
    WHILE   shift, and go to state 38
    DO      shift, and go to state 39
    RETURN  shift, and go to state 40
    ';'     shift, and go to state 41
    '{'     shift, and go to state 30

    CompoundStmt  go to state 45
    Stmt          go to state 134
    AssignStmt    go to state 48
    Assign        go to state 49
    CallStmt      go to state 50
    Call          go to state 51
    RetStmt       go to state 52
    While_s       go to state 53
    For_s         go to state 54
    If_s          go to state 55


State 132

   69 For_s: FOR '(' Assign ';' Expr ';' . Assign ')' Stmt

    ID  shift, and go to state 87

    Assign  go to state 135


State 133

   68 While_s: DO Stmt WHILE '(' Expr ')' . ';'

    ';'  shift, and go to state 136


State 134

   71 If_s: IF '(' Expr ')' Stmt ELSE Stmt .

    $default  reduce using rule 71 (If_s)


State 135

   69 For_s: FOR '(' Assign ';' Expr ';' Assign . ')' Stmt

    ')'  shift, and go to state 137


State 136

   68 While_s: DO Stmt WHILE '(' Expr ')' ';' .

    $default  reduce using rule 68 (While_s)


State 137

   69 For_s: FOR '(' Assign ';' Expr ';' Assign ')' . Stmt

    ID      shift, and go to state 35
    IF      shift, and go to state 36
    FOR     shift, and go to state 37
    WHILE   shift, and go to state 38
    DO      shift, and go to state 39
    RETURN  shift, and go to state 40
    ';'     shift, and go to state 41
    '{'     shift, and go to state 30

    CompoundStmt  go to state 45
    Stmt          go to state 138
    AssignStmt    go to state 48
    Assign        go to state 49
    CallStmt      go to state 50
    Call          go to state 51
    RetStmt       go to state 52
    While_s       go to state 53
    For_s         go to state 54
    If_s          go to state 55


State 138

   69 For_s: FOR '(' Assign ';' Expr ';' Assign ')' Stmt .

    $default  reduce using rule 69 (For_s)
